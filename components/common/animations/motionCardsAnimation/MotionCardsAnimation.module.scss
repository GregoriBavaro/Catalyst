@mixin respond-to($media) {
  @if $media == "large" {
    @media (max-width: 1300px) {
      @content;
    }
  } @else if $media == "medium" {
    @media (max-width: 950px) {
      @content;
    }
  } @else if $media == "small" {
    @media (max-width: 768px) {
      @content;
    }
  }
}

.motionCardsWrapper {
  flex: 1 1 50%;
  display: flex;
  flex-direction: row;
  overflow: hidden;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  align-items: stretch;
  max-height: 630px;

  .motionCards {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    gap: 3rem;
    padding: 3rem;
    max-width: 70%;
    border-radius: var(--border-radius);
    background-color: var(--dark-transparent-blue);
    transition: 0.5s ease-out;

    .motionCardsTextWrapper {
      width: 100%;
      display: flex;
      flex-direction: column;
      gap: 1rem;

      h1 {
        font-weight: 100;
        font-size: var(--fs-300);
      }

      p {
        opacity: 0.5;
      }
    }

    .motionCardsIcon {
      width: 100%;
      display: flex;
      justify-content: flex-start;
      align-items: center;

      img {
        width: 6rem;
        height: 6rem;
        object-fit: cover;

        @include respond-to(medium) {
          width: 4rem;
          height: 4rem;
        }
      }
    }

    @include respond-to(large) {
      max-width: 50%;
      padding: 2rem;
      flex: 1;
    }

    @include respond-to(medium) {
      padding: 2rem;
      min-height: unset;
      max-width: unset;
      min-width: calc(100% - 4rem);
    }
  }

  @include respond-to(large) {
    width: 100%;
    max-height: unset;
    flex-direction: row;
    gap: 2rem;
    padding: 0 0 2rem;
  }

  @include respond-to(medium) {
    flex-direction: column;
    padding: 0;
  }
}
