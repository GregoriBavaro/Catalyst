@mixin respond-to($media) {
  @if $media == "large" {
    @media (max-width: 1400px) {
      @content;
    }
  } @else if $media == "medium" {
    @media (max-width: 1300px) {
      @content;
    }
  } @else if $media == "small" {
    @media (max-width: 768px) {
      @content;
    }
  }
}

.wizard {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  padding: 0;
  gap: 2rem;
  margin: 4rem 0;

  @include respond-to(medium) {
    display: flex;
    flex-direction: column;
  }

  &__left,
  &__right {
    display: flex;
    align-items: center;
    justify-content: center;
    box-sizing: border-box;
    aspect-ratio: 1 / 1;
    border-radius: var(--border-radius);
    height: 100%;

    @include respond-to(medium) {
      aspect-ratio: unset;
    }
  }

  &__left {
    background-color: var(--dark-transparent-blue);
    overflow: hidden;

    .iconWrapper {
      margin-left: 6rem;

      img {
        object-fit: contain;
        max-width: 100%;
        height: 15rem;
        width: 7rem;
      }
    }
  }

  &__right {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    gap: 3rem;
    padding: 6rem;
    background-color: rgb(6, 36, 59);

    @include respond-to(medium) {
      padding: 5rem 4rem;
    }

    @include respond-to(small) {
      padding: 1.7rem 1rem;
    }

    p {
      opacity: 0.5;
    }

    a {
      margin-top: auto;
    }
  }
}
