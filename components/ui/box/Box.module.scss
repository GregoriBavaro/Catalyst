@mixin respond-to($media) {
  @if $media == "large" {
    @media (max-width: 1300px) {
      @content;
    }
  } @else if $media == "medium" {
    @media (max-width: 1000px) {
      @content;
    }
  } @else if $media == "small" {
    @media (max-width: 768px) {
      @content;
    }
  }
}

.box {
  padding: 4rem 0;

  .boxWrapper {
    display: flex;
    flex-direction: column;
    gap: 4rem;
    padding: 5rem 4rem;
    border-radius: var(--border-radius);
    background-color: var(--dark-transparent-blue);

    .headingText {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      gap: 3rem;

      h1 {
        max-width: unset;
      }

      div:nth-child(1) {
        display: flex;
        gap: 0.7rem;
        margin-bottom: -1rem;
      }
    }

    .boxList {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 2rem;
      align-items: stretch;
      overflow: hidden;

      h1 {
        font-weight: 100;
        font-size: var(--fs-300);
      }

      .boxItem {
        height: 100%;
        display: flex;
        flex-direction: column;
        gap: 1rem;
        background-color: var(--dark-transparent-blue);
        border-radius: var(--border-radius);
        padding: 2rem;

        p {
          opacity: 0.7;
        }

        h6 {
          margin-top: -0.5rem;
        }
      }

      @include respond-to(large) {
        grid-template-columns: repeat(1, 1fr);
      }

      @include respond-to(small) {
        gap: 1rem;
      }
    }

    @include respond-to(large) {
      padding: 5rem 4rem;
    }

    @include respond-to(medium) {
      padding: 4rem;
    }

    @include respond-to(small) {
      padding: 1.7rem 1rem 1rem;
    }
  }

  @include respond-to(small) {
    padding: 3rem 0;
  }
}
