@mixin respond-to($media) {
  @if $media == "large" {
    @media (max-width: 1300px) {
      @content;
    }
  } @else if $media == "medium" {
    @media (max-width: 1000px) {
      @content;
    }
  } @else if $media == "small" {
    @media (max-width: 768px) {
      @content;
    }
  } @else if $media == "extra-small" {
    @media (max-width: 400px) {
      @content;
    }
  } @else if $media == "small-height" {
    @media (max-height: 480px) and (max-width: 670px) {
      @content;
    }
  }
}

.hamburgerItems {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
  width: 100%;
  height: 100%;
  gap: 2rem;

  .menuOptions {
    width: 100%;
    padding: 0 4rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 2.5rem;

    .languages {
      display: flex;
      justify-content: flex-end;
      width: 100%;
    }

    .listsWrapper {
      display: flex;
      justify-content: space-between;
      align-items: flex-end;
      width: 100%;

      ul {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        gap: 2rem;
        width: fit-content;

        li {
          z-index: 2;
          overflow: hidden;

          div {
            display: flex;
            gap: 1rem;
          }
        }

        @include respond-to(small) {
          gap: 1.5rem;
        }

        @include respond-to("extra-small") {
          gap: 1rem;
        }
      }

      .paths {
        .title {
          text-transform: uppercase;
          font-weight: 700;
          font-size: var(--fs-600);
          line-height: 3rem;
          transition: 0.3s;
          cursor: pointer;

          @include respond-to(large) {
            font-size: var(--fs-500);
            line-height: unset;
          }

          @include respond-to(small-height) {
            font-size: var(--fs-300);
          }
        }

        .title:hover {
          color: var(--light-cyan);
        }

        .number {
          color: var(--light-cyan);

          @include respond-to(small) {
            font-size: var(--fs-200);
          }

          @include respond-to(small-height) {
            font-size: var(--fs-100);
          }
        }
      }

      .links {
        gap: 1.5rem;

        li {
          width: 100%;

          a {
            display: flex;
            gap: 1rem;
            justify-content: space-between;

            svg {
              transform: rotate(40deg);

              @include respond-to(small) {
                font-size: 0.8rem;
              }
            }
          }
        }

        .title {
          text-transform: uppercase;
          font-weight: 700;
          font-size: var(--fs-100);
          cursor: pointer;
          opacity: 0.5;
          transition: 0.3s;

          @include respond-to(small) {
            font-size: 0.8rem;
          }

          @include respond-to(small-height) {
            font-size: 0.6rem;
          }
        }

        .title:hover {
          opacity: 1;
        }

        @include respond-to(small) {
          gap: 0.4rem;
        }
      }

      @include respond-to(small) {
        justify-content: space-between;
        flex-direction: column;
        align-items: flex-start;
        height: 100%;
        padding: 0 0 0 0.5rem;
      }
    }

    .horizontalLine {
      height: 1px;
      background-color: var(--border-gray);
    }

    @include respond-to(small) {
      padding: 3rem 1rem 0;
      height: 100%;
      gap: 1rem;
    }

    @include respond-to(small-height) {
      padding: 0 1rem;
    }
  }

  @include respond-to(small) {
    padding: 6rem 0 0;
    gap: 1rem;
  }

  & div:nth-child(2) {
    span {
      @include respond-to(small-height) {
        font-size: var(--fs-800);
      }
    }
  }
}
