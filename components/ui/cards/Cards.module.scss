@mixin transition($property: all, $duration: 0.45s, $ease: cubic-bezier(0.65, 0, 0.076, 1)) {
  transition: $property $duration $ease;
}

@mixin respond-to($media) {
  @if $media == "medium" {
    @media (max-width: 1110px) {
      @content;
    }
  } @else if $media == "small" {
    @media (max-width: 768px) {
      @content;
    }
  }
}

.cards {
  padding: 4rem 0;

  @include respond-to(small) {
    padding: 3rem 0;
  }

  .cardsWrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 3rem;

    h1 {
      max-width: unset;
      margin-right: auto;
    }

    .cardsItemWrapper {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 2rem;
      align-items: stretch;
      overflow: hidden;
      height: 100%;
      margin-top: 1rem;

      @include respond-to(medium) {
        grid-template-columns: repeat(2, 1fr);
      }

      @include respond-to(small) {
        grid-template-columns: repeat(1, 1fr);
        gap: 1rem;
      }
    }

    button {
      all: unset;
      text-align: center;
      width: fit-content;
      cursor: pointer;
      margin-top: -2rem;

      svg {
        transition: 0.3s;
        font-size: 3rem;
      }

      &:hover svg {
        scale: 1.3;
      }
    }

    h4 {
      margin-right: auto;
    }
  }

 
}
